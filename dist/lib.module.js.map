{"version":3,"file":"lib.module.js","sources":["../src/component/utils/compare.js","../src/component/utils/token.js","../src/component/components/dropdown.styl.js","../src/component/components/dropdown.js","../src/component/utils/outside-click.js","../src/component/index.styl.js","../src/component/index.js"],"sourcesContent":["import escape from \"escape-string-regexp\";\r\n\r\n/**\r\n * case-insensitive comparison\r\n */\r\nexport function compare(partialValue, fullValue) {\r\n    return new RegExp(`^${escape(partialValue || \"\")}$`, \"i\").test(fullValue || \"\");\r\n}\r\n\r\n/**\r\n * case-insensitive comparison (fuzzy)\r\n */\r\nexport function compareFuzzy(partialValue, fullValue) {\r\n    return new RegExp(escape(partialValue || \"\"), \"i\").test(fullValue || \"\");\r\n}\r\n","import { compare, compareFuzzy } from \"./compare\";\r\n\r\nexport function tokenRegex(opts = {}) {\r\n    const qtfr = opts.partial ? \"*\" : \"+\";\r\n\r\n    return new RegExp(\r\n        `(?!^|\\\\(|\\\\s)*` + // find beginning of token\r\n            `([-]+)?` + // capture prepended negation character\r\n            `([\\\\w.$]+)` + // the attribute name\r\n            `${opts.partial ? \"?\" : \"\"}` + // assume it's a token, even with no attribute\r\n            `:${opts.partial ? \"?\" : \"\"}` + // assume it's a token, even with no colon\r\n            `(?!:)` + // make sure colon isn't repeated\r\n            `([><=]*)` + // the operators\r\n            `(?:(\")(.${qtfr}?)(\\\\*)?\"|([^\\\\s()*\"]${qtfr}))` + // the attribute value, checking for quotes\r\n            `${opts.partial ? \"?\" : \"\"}` + // whether attribute value can be empty\r\n            `(\\\\*)?` + // capture appended wildcard\r\n            `(?!\\\\s|\\\\)|$)*`, // find the end of the token\r\n        \"g\"\r\n    );\r\n}\r\n\r\nexport function parseToken(value, attributes = [], nameKeyIncludes = []) {\r\n    const results = Array.isArray(value) ? value : tokenRegex({ partial: true }).exec(value);\r\n\r\n    if (!results || !results.length) {\r\n        return {};\r\n    }\r\n\r\n    const tokenData = {\r\n        fullToken: results[0],\r\n        attributeName: results[2],\r\n        attributeNameValid: false,\r\n        attributeValue: results[5] || results[7],\r\n        attributeValueValid: false,\r\n        prepended: results[1] || \"\",\r\n        operator: results[3],\r\n        negated: results[0].indexOf(\"-\") > -1,\r\n        quoted: Boolean(results[4]),\r\n        wildcard: Boolean(results[6] || results[8]),\r\n    };\r\n\r\n    if (attributes) {\r\n        const attribute = attributes.find((attr) => {\r\n            let matchFound = false;\r\n            for (const key of nameKeyIncludes) {\r\n                if (compare(attr[key], tokenData.attributeName)) {\r\n                    matchFound = true;\r\n                    break;\r\n                }\r\n            }\r\n            return matchFound;\r\n        });\r\n\r\n        if (attribute) {\r\n            tokenData.attributeNameValid = true;\r\n            tokenData.attributeValueValid = true;\r\n\r\n            if (Array.isArray(attribute.enumerations)) {\r\n                tokenData.attributeValueValid = attribute.enumerations.findIndex((v) => compareFuzzy(tokenData.attributeValue, v)) > -1;\r\n            }\r\n        }\r\n    }\r\n\r\n    return tokenData;\r\n}\r\n\r\nexport function serializeToken(token) {\r\n    const { prepended = \"\", attributeName = \"\", attributeValue = \"\", operator = \"\" } = token || {};\r\n\r\n    return `${prepended}${attributeName}:${operator}${attributeValue}`;\r\n}\r\n\r\nexport function extractTokens(value, attributes, nameKeyIncludes) {\r\n    const positions = [];\r\n    const regex = tokenRegex();\r\n\r\n    let result;\r\n    while ((result = regex.exec(value)) !== null) {\r\n        if (attributes) {\r\n            const parsed = parseToken(result, attributes, nameKeyIncludes);\r\n\r\n            if (!parsed.attributeNameValid || !parsed.attributeValueValid) {\r\n                continue;\r\n            }\r\n        }\r\n\r\n        positions.push([\r\n            result.index, // start position\r\n            regex.lastIndex, // end position\r\n        ]);\r\n    }\r\n\r\n    return positions;\r\n}\r\n","import styled from \"@emotion/styled\";\r\nimport { keyframes } from \"@emotion/react\";\r\n\r\nimport {\r\n    top,\r\n    left,\r\n    color,\r\n    boxShadow,\r\n    borders,\r\n    borderColor,\r\n    borderRadius,\r\n    space,\r\n    width,\r\n    minWidth,\r\n    maxWidth,\r\n    maxHeight,\r\n    fontSize,\r\n    fontWeight,\r\n    fontFamily,\r\n    lineHeight,\r\n    letterSpacing,\r\n} from \"styled-system\";\r\n\r\nexport const swingDown = keyframes`\r\n  0% {\r\n    opacity: 0;\r\n    transform: perspective(50em) rotateX(-30deg);\r\n  }\r\n  100% {\r\n    opacity: 1;\r\n    transform: perspective(50em) rotateX(0deg);\r\n  }\r\n`;\r\n\r\nexport const Container = styled(\"aside\")`\r\n    display: inline-block;\r\n    position: absolute;\r\n    z-index: 10;\r\n    transform-origin: 50% 0;\r\n    animation: ${swingDown} ease-in-out 250ms;\r\n    transition: top 100ms, left 100ms;\r\n\r\n    ${top}\r\n    ${left}\r\n  ${color}\r\n  ${boxShadow}\r\n  ${borders}\r\n  ${borderColor}\r\n  ${borderRadius}\r\n  ${space}\r\n  ${width}\r\n  ${minWidth}\r\n  ${fontSize}\r\n  ${fontWeight}\r\n  ${fontFamily}\r\n  ${lineHeight}\r\n  ${letterSpacing}\r\n`;\r\n\r\nContainer.defaultProps = {\r\n    bg: \"#555555\",\r\n    boxShadow: \"0 4px 10px rgba(0, 0, 0, .25)\",\r\n    color: \"#FFFFFF\",\r\n    minWidth: \"280px\",\r\n};\r\n\r\nexport const Section = styled(\"section\")`\r\n    padding: 15px;\r\n    text-align: ${(props) => (props.center ? \"center\" : \"inherit\")};\r\n    :not(:last-child) {\r\n        border-bottom: 1px solid rgba(255, 255, 255, 0.15);\r\n    }\r\n`;\r\n\r\nexport const Suggestions = styled(\"ul\")`\r\n    list-style-type: none;\r\n    line-height: 20px;\r\n    margin: 10px 0;\r\n    overflow: auto;\r\n    padding-inline-start: 0;\r\n\r\n    ${space}\r\n    ${color}\r\n  ${borders}\r\n  ${maxHeight}\r\n`;\r\n\r\nSuggestions.defaultProps = {\r\n    maxHeight: \"200px\",\r\n};\r\n\r\nexport const Suggestion = styled(\"li\")`\r\n    cursor: pointer;\r\n    border: 1px solid transparent;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n\r\n    ${space}\r\n    ${maxWidth}\r\n\r\n  ${(props) => props.active && color}\r\n  ${(props) => props.active && borders}\r\n  ${(props) => props.active && borderColor}\r\n`;\r\n\r\nSuggestion.defaultProps = {\r\n    bg: \"#FFFFFF\",\r\n    color: \"#000000\",\r\n    p: \"3px 15px\",\r\n    maxWidth: \"320px\",\r\n};\r\n\r\nexport const Operators = styled(Section)`\r\n    padding: 15px 0;\r\n`;\r\n\r\nexport const Operator = styled(\"div\")`\r\n    display: inline-block;\r\n    background: ${(props) => (props.active ? \"rgba(255, 255, 255, 0.2)\" : \"none\")};\r\n    font-weight: 500;\r\n    line-height: 18px;\r\n    padding: 5px 10px;\r\n    cursor: pointer;\r\n    &:hover {\r\n        background: rgba(255, 255, 255, 0.1);\r\n    }\r\n`;\r\n\r\nexport const OperatorLone = styled(Operator)`\r\n    display: block;\r\n    margin-bottom: 5px;\r\n`;\r\n\r\nexport const Key = styled(\"div\")`\r\n    display: inline-block;\r\n    background: rgba(255, 255, 255, 0.1);\r\n    border-radius: 2px;\r\n    font-size: 12px;\r\n    font-weight: 700;\r\n    line-height: 18px;\r\n    min-width: 20px;\r\n    text-align: center;\r\n    vertical-align: middle;\r\n    padding: 2px 5px;\r\n    margin-right: 5px;\r\n`;\r\n\r\nexport const KeyOutline = styled(Key)`\r\n    background: none;\r\n    border: 1px solid ${(props) => props.theme.color};\r\n    color: ${(props) => props.theme.color};\r\n    font-size: 8px;\r\n    padding: 0;\r\n    width: ${(props) => (props.long ? \"36px\" : \"18px\")};\r\n    height: 18px;\r\n`;\r\n\r\nexport const Helper = styled(\"div\")`\r\n    display: inline-block;\r\n    opacity: 0.5;\r\n    &:not(:last-child) {\r\n        margin-right: 15px;\r\n    }\r\n`;\r\n","import React, { PureComponent } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { compareFuzzy } from \"../utils/compare\";\r\nimport { parseToken, serializeToken } from \"../utils/token\";\r\n\r\nimport { Container, Section, Suggestions, Suggestion, Helper, Operators, Operator, OperatorLone, Key, KeyOutline } from \"./dropdown.styl\";\r\n\r\nexport default class Dropdown extends PureComponent {\r\n    static propTypes = {\r\n        // eslint-disable-line\r\n        value: PropTypes.string,\r\n        nameKey: PropTypes.string,\r\n        attributes: PropTypes.array,\r\n        onSelect: PropTypes.func,\r\n        onClose: PropTypes.func,\r\n        offsetX: PropTypes.number,\r\n        offsetY: PropTypes.number,\r\n        keyboardHelpers: PropTypes.bool,\r\n        footerComponent: PropTypes.func,\r\n        dropdownProps: PropTypes.object,\r\n        selectorProps: PropTypes.object,\r\n        listProps: PropTypes.object,\r\n        translations: PropTypes.object,\r\n    };\r\n\r\n    static defaultProps = {\r\n        // eslint-disable-line\r\n        value: \"\",\r\n        nameKey: \"name\",\r\n        onSelect: () => {},\r\n        onClose: () => {},\r\n        keyboardHelpers: true,\r\n        footerComponent: () => null,\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.onKeyDown = this.onKeyDown.bind(this);\r\n        this.handleEnterKey = this.handleEnterKey.bind(this);\r\n        this.handleEscKey = this.handleEscKey.bind(this);\r\n        this.handleArrowKeys = this.handleArrowKeys.bind(this);\r\n        this.adjustListScroll = this.adjustListScroll.bind(this);\r\n        this.getAttribute = this.getAttribute.bind(this);\r\n        this.getSuggestions = this.getSuggestions.bind(this);\r\n        this.getSuggestionAddons = this.getSuggestionAddons.bind(this);\r\n        this.filterSuggestions = this.filterSuggestions.bind(this);\r\n        this.acceptSuggestion = this.acceptSuggestion.bind(this);\r\n        this.getOperators = this.getOperators.bind(this);\r\n        this.setOperator = this.setOperator.bind(this);\r\n        this.state = {\r\n            suggestions: [],\r\n            highlightedIdx: 0,\r\n            selectedIdx: null,\r\n            prepended: \"\",\r\n            operator: \"\",\r\n            negated: false,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.filterSuggestions(this.props.value);\r\n        this.props.keyboardHelpers && document.addEventListener(\"keydown\", this.onKeyDown, false);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.keyboardHelpers && document.removeEventListener(\"keydown\", this.onKeyDown, false);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (this.props.value !== nextProps.value) {\r\n            this.filterSuggestions(nextProps.value);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.state.suggestions.length === 0) {\r\n            this.props.onClose();\r\n        }\r\n    }\r\n\r\n    onKeyDown(evt) {\r\n        switch (evt.keyCode) {\r\n            case 9: // tab key\r\n            case 13: // enter key\r\n                this.handleEnterKey(evt);\r\n                break;\r\n            case 27: // esc key\r\n                this.handleEscKey(evt);\r\n                break;\r\n            case 38: // up key\r\n            case 40: // down key\r\n                this.handleArrowKeys(evt, evt.keyCode);\r\n                break;\r\n        }\r\n    }\r\n\r\n    handleEnterKey(evt) {\r\n        evt.preventDefault();\r\n        this.acceptSuggestion();\r\n    }\r\n\r\n    handleEscKey(evt) {\r\n        evt.preventDefault();\r\n        this.props.onClose(true);\r\n    }\r\n\r\n    handleArrowKeys(evt, keyCode) {\r\n        evt.preventDefault();\r\n\r\n        const { highlightedIdx } = this.state;\r\n        const isDownKey = keyCode === 40;\r\n\r\n        // the furthest down it can go before wrapping\r\n        const max = this.state.suggestions.length - 1;\r\n\r\n        // determine the next position\r\n        const newIdx = highlightedIdx !== null ? (isDownKey ? highlightedIdx + 1 : highlightedIdx - 1) : isDownKey ? 0 : max;\r\n\r\n        this.setState(\r\n            {\r\n                // make sure it doesn't go out of bounds by resetting to opposite side\r\n                highlightedIdx: isDownKey ? (newIdx <= max ? newIdx : 0) : newIdx >= 0 ? newIdx : max,\r\n            },\r\n            this.adjustListScroll\r\n        );\r\n    }\r\n\r\n    adjustListScroll() {\r\n        const { offsetTop, clientHeight: selectorHeight } = this._selected;\r\n\r\n        const { scrollTop, clientHeight: listHeight } = this._list;\r\n\r\n        const topWaypoint = selectorHeight;\r\n        const bottomWaypoint = listHeight - selectorHeight;\r\n        const position = offsetTop - scrollTop;\r\n\r\n        if (position > bottomWaypoint) {\r\n            this._list.scrollTop += selectorHeight + (position - bottomWaypoint);\r\n        } else if (position < topWaypoint) {\r\n            this._list.scrollTop = offsetTop - selectorHeight + (position - topWaypoint);\r\n        }\r\n    }\r\n\r\n    getAttribute(selectedIdx) {\r\n        if (selectedIdx !== null && selectedIdx > -1) {\r\n            return this.props.attributes[selectedIdx];\r\n        }\r\n    }\r\n\r\n    getSuggestions(attribute) {\r\n        const { nameKey, attributes } = this.props;\r\n\r\n        return attribute ? attribute.enumerations || [] : attributes.map((attr) => attr[nameKey]);\r\n    }\r\n\r\n    getSuggestionAddons(attribute, parsed) {\r\n        const addons = [];\r\n\r\n        if (attribute) {\r\n            if (!parsed.wildcard && !attribute.enumerations && parsed.attributeValue && attribute.type === \"string\") {\r\n                addons.push(`\"${parsed.attributeValue}\"`);\r\n            }\r\n\r\n            if (parsed.attributeValue && attribute.type === \"string\") {\r\n                parsed.quoted && !attribute.enumerations\r\n                    ? addons.push(`\"${parsed.attributeValue}*\"`)\r\n                    : addons.push(`*${parsed.attributeValue}*`, `${parsed.attributeValue}*`, `*${parsed.attributeValue}`);\r\n            }\r\n        }\r\n\r\n        return addons;\r\n    }\r\n\r\n    filterSuggestions(value) {\r\n        const { nameKey, attributes } = this.props;\r\n\r\n        const parsed = parseToken(value);\r\n\r\n        const hasAttributeName = parsed.attributeName && value.indexOf(\":\") > -1;\r\n        const selectedIdx = hasAttributeName ? attributes.findIndex((attr) => attr[nameKey] === parsed.attributeName) : -1;\r\n\r\n        const attribute = this.getAttribute(selectedIdx);\r\n        const suggestions = this.getSuggestions(attribute);\r\n        const searchValue = selectedIdx > -1 ? parsed.attributeValue : parsed.attributeName;\r\n\r\n        const filtered = suggestions.filter((v) => compareFuzzy(searchValue, v)).concat(this.getSuggestionAddons(attribute, parsed));\r\n\r\n        this.setState({\r\n            selectedIdx,\r\n            prepended: parsed.prepended,\r\n            operator: parsed.operator,\r\n            negated: parsed.negated,\r\n            suggestions: filtered,\r\n            highlightedIdx: 0,\r\n        });\r\n    }\r\n\r\n    acceptSuggestion() {\r\n        const { nameKey, onSelect } = this.props;\r\n\r\n        const { suggestions, highlightedIdx, selectedIdx, prepended, operator } = this.state;\r\n\r\n        const attribute = this.getAttribute(selectedIdx);\r\n        const suggestion = suggestions[highlightedIdx];\r\n\r\n        const newValue = attribute ? `${attribute[nameKey]}:${operator}${suggestion}` : suggestion;\r\n\r\n        const appended = selectedIdx === -1 ? \":\" : \"\";\r\n        onSelect(`${prepended}${newValue}`, appended);\r\n    }\r\n\r\n    getOperators() {\r\n        const operators = [];\r\n        const attribute = this.getAttribute(this.state.selectedIdx);\r\n\r\n        if (attribute) {\r\n            switch (attribute.type) {\r\n                case \"int\":\r\n                case \"float\":\r\n                    operators.push({\r\n                        name: \"GT\",\r\n                        char: \">\",\r\n                        active: this.state.operator === \">\",\r\n                    });\r\n                    operators.push({\r\n                        name: \"LT\",\r\n                        char: \"<\",\r\n                        active: this.state.operator === \"<\",\r\n                    });\r\n                    operators.push({\r\n                        name: \"GTE\",\r\n                        char: \">=\",\r\n                        active: this.state.operator === \">=\",\r\n                    });\r\n                    operators.push({\r\n                        name: \"LTE\",\r\n                        char: \"<=\",\r\n                        active: this.state.operator === \"<=\",\r\n                    });\r\n                    break;\r\n            }\r\n        }\r\n\r\n        return operators;\r\n    }\r\n\r\n    setOperator(newOperator) {\r\n        const { value } = this.props;\r\n\r\n        const { negated, operator } = this.state;\r\n\r\n        if (newOperator === \"-\") {\r\n            const newValue = value.replace(/^-?(.*)/, `${negated ? \"\" : \"-\"}$1`);\r\n\r\n            this.props.onSelect(newValue);\r\n        } else {\r\n            const token = parseToken(value);\r\n            token.operator = operator === newOperator ? \"\" : newOperator;\r\n\r\n            this.props.onSelect(serializeToken(token));\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const Footer = this.props.footerComponent;\r\n\r\n        return (\r\n            <Container left={this.props.offsetX || 0} top={this.props.offsetY || 0} {...this.props.dropdownProps}>\r\n                <Suggestions {...this.props.listProps} ref={(ref) => (this._list = ref)}>\r\n                    {this.state.suggestions.map((suggestion, key) => {\r\n                        const isActive = this.state.highlightedIdx === key;\r\n\r\n                        return (\r\n                            <Suggestion\r\n                                key={key}\r\n                                active={isActive}\r\n                                onClick={this.acceptSuggestion}\r\n                                onMouseOver={() => this.setState({ highlightedIdx: key })}\r\n                                ref={isActive ? (ref) => (this._selected = ref) : undefined}\r\n                                {...this.props.selectorProps}>\r\n                                {suggestion}\r\n                            </Suggestion>\r\n                        );\r\n                    })}\r\n                </Suggestions>\r\n\r\n                <Operators>\r\n                    <OperatorLone active={this.state.negated} onClick={() => this.setOperator(\"-\")}>\r\n                        <Key>-</Key>\r\n                        {this.props.translations && this.props.translations.negate ? this.props.translations.negate : \"NEGATE\"}\r\n                    </OperatorLone>\r\n\r\n                    {this.getOperators().map((operator, key) => (\r\n                        <Operator key={key} active={operator.active} onClick={() => this.setOperator(operator.char)}>\r\n                            <Key>{operator.char}</Key>\r\n                            {operator.name}\r\n                        </Operator>\r\n                    ))}\r\n                </Operators>\r\n\r\n                {this.props.keyboardHelpers && (\r\n                    <Section center>\r\n                        <Helper>\r\n                            <KeyOutline>▲</KeyOutline>\r\n                            <KeyOutline>▼</KeyOutline>\r\n                            {this.props.translations && this.props.translations.navigate ? this.props.translations.navigate : \"to navigate\"}\r\n                        </Helper>\r\n\r\n                        <Helper>\r\n                            <KeyOutline long>↵</KeyOutline>\r\n                            {this.props.translations && this.props.translations.select ? this.props.translations.select : \"to select\"}\r\n                        </Helper>\r\n                    </Section>\r\n                )}\r\n\r\n                <Footer />\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\n/**\r\n * Component that alerts if you click outside of it\r\n */\r\nexport default class OutsideAlerter extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.wrapperRef = React.createRef();\r\n        this.handleClickOutside = this.handleClickOutside.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener(\"mousedown\", this.handleClickOutside);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"mousedown\", this.handleClickOutside);\r\n    }\r\n\r\n    /**\r\n     * Alert if clicked on outside of element\r\n     */\r\n    handleClickOutside(event) {\r\n        if (this.wrapperRef && !this.wrapperRef.current.contains(event.target)) {\r\n            if (this.props.notify) this.props.notify();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <div ref={this.wrapperRef}>{this.props.children}</div>;\r\n    }\r\n}\r\n","import styled from \"@emotion/styled\";\r\nimport { css } from \"@emotion/css\";\r\nimport Textarea from \"react-textarea-autosize\";\r\n\r\nimport {\r\n    style,\r\n    space,\r\n    width,\r\n    color,\r\n    borders,\r\n    borderColor,\r\n    borderRadius,\r\n    boxShadow,\r\n    fontSize,\r\n    fontWeight,\r\n    fontFamily,\r\n    lineHeight,\r\n    textAlign,\r\n    letterSpacing,\r\n} from \"styled-system\";\r\n\r\nexport const Container = styled(\"div\")`\r\n    position: relative;\r\n    width: 100%;\r\n`;\r\n\r\nexport const InputContainer = styled(\"div\")`\r\n    position: relative;\r\n    ${space}\r\n    ${width}\r\n  ${borders}\r\n  ${borderColor}\r\n  ${borderRadius}\r\n  ${boxShadow}\r\n  ${color}\r\n  ${fontSize}\r\n  ${fontWeight}\r\n  ${fontFamily}\r\n  ${lineHeight}\r\n  ${letterSpacing}\r\n  ${textAlign}\r\n`;\r\n\r\nInputContainer.defaultProps = {\r\n    bg: \"#FFFFFF\",\r\n    color: \"#505050\",\r\n    border: \"1px solid rgba(0, 0, 0, .1)\",\r\n    fontFamily: \"monospace\",\r\n};\r\n\r\nconst CleanInput = Textarea;\r\n\r\nconst placeholderColor = style({\r\n    prop: \"placeholderColor\",\r\n    cssProperty: \"color\",\r\n    key: \"colors\",\r\n});\r\n\r\nexport const Input = styled(CleanInput)`\r\n    display: block;\r\n    background: none;\r\n    border: none;\r\n    outline: none;\r\n    resize: none;\r\n    font: inherit;\r\n    width: 100%;\r\n    padding: 0;\r\n    white-space: pre-wrap;\r\n    word-wrap: break-word;\r\n    /* we only want overlay text visible */\r\n    /* need to do this so caret still shows up */\r\n    color: inherit;\r\n    -webkit-text-fill-color: transparent;\r\n    ::placeholder {\r\n        ${placeholderColor}\r\n        -webkit-text-fill-color: initial;\r\n    }\r\n`;\r\n\r\nInput.defaultProps = {\r\n    lineHeight: \"1.1rem\",\r\n    placeholderColor: \"#D7D7D7\",\r\n};\r\n\r\nexport const Overlay = styled(\"div\")`\r\n    display: block;\r\n    background: none;\r\n    border: none;\r\n    outline: none;\r\n    resize: none;\r\n    font: inherit;\r\n    max-width: 100%;\r\n    padding: 0;\r\n    white-space: pre-wrap;\r\n    word-wrap: break-word;\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    pointer-events: none;\r\n    padding: inherit;\r\n\r\n    ${(props) =>\r\n        props.collapsed &&\r\n        css`\r\n            overflow: hidden;\r\n            white-space: nowrap;\r\n            text-overflow: ellipsis;\r\n        `}\r\n\r\n    /* reversed from Input above */\r\n  -webkit-text-fill-color: initial;\r\n`;\r\n\r\nexport const Inline = styled(\"span\")`\r\n    font: inherit;\r\n`;\r\n\r\nconst tokenColor = style({\r\n    prop: \"tokenColor\",\r\n    cssProperty: \"color\",\r\n    key: \"colors\",\r\n});\r\n\r\n// const tokenUnderline = style({\r\n//   prop: 'tokenColor',\r\n//   cssProperty: 'backgroundColor',\r\n//   key: 'colors'\r\n// })\r\n\r\nexport const Token = styled(Inline)`\r\n    position: relative;\r\n    cursor: pointer;\r\n    font-weight: 500;\r\n\r\n    ${tokenColor}\r\n`;\r\n// ${\r\n//     '' /* &:after {\r\n//     content: '';\r\n//     position: absolute;\r\n//     top: 100%;\r\n//     left: 0;\r\n//     right: 0;\r\n//     height: 1px;\r\n//     opacity: 0;\r\n//     transform: translateY(3px);\r\n//     transition: all 150ms;\r\n\r\n//     ${tokenUnderline}\r\n//   } */\r\n//   }\r\n//   ${\r\n//     '' /* &:hover:after {\r\n//     opacity: 1;\r\n//     transform: translateY(0px);\r\n//   } */\r\n//   }\r\n\r\nToken.defaultProps = {\r\n    tokenColor: \"#2384FF\",\r\n};\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { extractTokens } from \"./utils/token\";\r\nimport Dropdown from \"./components/dropdown\";\r\nimport OutsideAlerter from \"./utils/outside-click\";\r\n\r\nimport { Container, InputContainer, Input, Overlay, Inline, Token } from \"./index.styl\";\r\n\r\nexport default class QueryAssist extends Component {\r\n    static propTypes = {\r\n        // eslint-disable-line\r\n        debug: PropTypes.bool,\r\n        data: PropTypes.array,\r\n        nameKey: PropTypes.string,\r\n        nameKeyIncludes: PropTypes.array,\r\n        defaultValue: PropTypes.string,\r\n        placeholder: PropTypes.string,\r\n        onChange: PropTypes.func,\r\n        onSubmit: PropTypes.func,\r\n        keyboardHelpers: PropTypes.bool,\r\n        collapseOnBlur: PropTypes.bool,\r\n        footerComponent: PropTypes.func,\r\n        inputProps: PropTypes.object,\r\n        dropdownProps: PropTypes.object,\r\n        selectorProps: PropTypes.object,\r\n        listProps: PropTypes.object,\r\n        alwaysLeft: PropTypes.bool, // Choose if element will be always left\r\n        translations: PropTypes.object,\r\n    };\r\n\r\n    static defaultProps = {\r\n        // eslint-disable-line\r\n        data: [],\r\n        nameKey: \"name\",\r\n        nameKeyIncludes: [\"name\"],\r\n        defaultValue: \"\",\r\n        onChange: () => {},\r\n        onSubmit: () => {},\r\n        placeholder: \"Search\",\r\n        inputProps: {},\r\n        dropdownProps: {},\r\n        selectorProps: {},\r\n        listProps: {},\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.onFocus = this.onFocus.bind(this);\r\n        this.onBlur = this.onBlur.bind(this);\r\n        this.onKeyDown = this.onKeyDown.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onAutosuggest = this.onAutosuggest.bind(this);\r\n        this.onSelectValue = this.onSelectValue.bind(this);\r\n        this.handleEnterKey = this.handleEnterKey.bind(this);\r\n        this.shouldAutosuggest = this.shouldAutosuggest.bind(this);\r\n        this.onClose = this.onClose.bind(this);\r\n        // this.onClickToken = this.onClickToken.bind(this)\r\n        this.extract = this.extract.bind(this);\r\n        this.getCurrentChunk = this.getCurrentChunk.bind(this);\r\n        this.buildOverlay = this.buildOverlay.bind(this);\r\n        this.state = {\r\n            focused: false,\r\n            value: props.defaultValue,\r\n            attributes: props.data,\r\n            overlayComponents: [],\r\n            dropdownClosed: false,\r\n            dropdownOpen: false,\r\n            dropdownValue: null,\r\n            dropdownX: null,\r\n            dropdownY: null,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            overlayComponents: this.buildOverlay(this.state.value),\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        const { value, attributes } = this.state;\r\n\r\n        if (value !== prevState.value) {\r\n            this.props.onChange(value);\r\n        }\r\n\r\n        if (value !== prevState.value || attributes.length !== prevState.attributes.length) {\r\n            this.setState(\r\n                {\r\n                    overlayComponents: this.buildOverlay(value),\r\n                },\r\n                this.onAutosuggest\r\n            );\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        const newState = {};\r\n\r\n        // default value can be empty string (to clear search)\r\n        if (nextProps.defaultValue !== undefined) {\r\n            newState.value = nextProps.defaultValue;\r\n        }\r\n\r\n        if (nextProps.data) {\r\n            newState.attributes = nextProps.data;\r\n        }\r\n\r\n        this.setState(newState);\r\n    }\r\n\r\n    onFocus(evt) {\r\n        this.setState(\r\n            {\r\n                focused: true,\r\n            },\r\n            this.onAutosuggest\r\n        );\r\n    }\r\n\r\n    onBlur(evt) {\r\n        this.setState({\r\n            focused: false,\r\n        });\r\n    }\r\n\r\n    onKeyDown(evt) {\r\n        if (evt.keyCode === 13) {\r\n            this.handleEnterKey(evt);\r\n        }\r\n\r\n        // close dropdown if navigating with arrow keys\r\n        if (evt.keyCode === 37 || evt.keyCode === 39) {\r\n            this.onClose();\r\n        }\r\n    }\r\n\r\n    onChange(evt) {\r\n        this.setState({\r\n            value: evt.target.value,\r\n        });\r\n    }\r\n\r\n    onAutosuggest() {\r\n        const { value } = this.state;\r\n        const { offsetLeft, offsetTop } = this._marker;\r\n\r\n        const { chunk } = this.getCurrentChunk(value);\r\n        const suggest = this.shouldAutosuggest(chunk);\r\n\r\n        if (suggest) {\r\n            this.setState({\r\n                dropdownClosed: false,\r\n                dropdownOpen: true,\r\n                dropdownValue: chunk,\r\n                dropdownX: offsetLeft,\r\n                dropdownY: offsetTop + 25, // line height + 5 extra padding\r\n            });\r\n        } else {\r\n            this.setState({\r\n                dropdownOpen: false,\r\n            });\r\n        }\r\n    }\r\n\r\n    onSelectValue(chunk, appended = \"\") {\r\n        const { value } = this.state;\r\n        const { index, indexEnd } = this.getCurrentChunk(value);\r\n\r\n        const before = value.slice(0, index);\r\n        const after = value.slice(indexEnd);\r\n        const position = index + chunk.length + appended.length;\r\n        // const positionEnd = position + after.length\r\n\r\n        this.setState(\r\n            {\r\n                value: `${before}${chunk}${appended}${after}`,\r\n                dropdownClosed: appended !== \":\",\r\n            },\r\n            () => {\r\n                // position caret at the end of the inserted value\r\n                this._input.focus();\r\n                this._input.setSelectionRange(position, position);\r\n            }\r\n        );\r\n    }\r\n\r\n    handleEnterKey(evt) {\r\n        // whether this input is infocus\r\n        const isFocused = document.activeElement === this._input;\r\n\r\n        // submit on enter, line break on shift enter\r\n        // dropdown handles enter key globally, so prevent clash\r\n        if (!evt.shiftKey && isFocused && !this.state.dropdownOpen) {\r\n            evt.preventDefault();\r\n            this.props.onSubmit(this.state.value);\r\n        }\r\n    }\r\n\r\n    shouldAutosuggest(chunk) {\r\n        const { selectionStart } = this._input;\r\n        const { value, focused } = this.state;\r\n\r\n        // next character is whitespace, closing paren or null\r\n        const nextCharIsEmpty = !value.charAt(selectionStart) || /[)\\s]/.test(value.charAt(selectionStart));\r\n\r\n        // whitespace/negation/paren before and whitespace after caret\r\n        const isNewWord = nextCharIsEmpty && /[\\s-(]/.test(value.charAt(selectionStart - 1));\r\n\r\n        // cursor is at end of the current word\r\n        const atEndOfWord = nextCharIsEmpty && /[^)\\s]/.test(value.charAt(selectionStart - 1));\r\n\r\n        return focused && (!value || isNewWord || (atEndOfWord && !this.state.dropdownClosed));\r\n    }\r\n\r\n    onClose(forWord) {\r\n        this.setState({\r\n            dropdownOpen: false,\r\n            // don't reopen if it was closed for current word\r\n            dropdownClosed: forWord || false,\r\n        });\r\n    }\r\n\r\n    // onClickToken (start, end) {\r\n    //   // move cursor to end of token\r\n    //   this._input.focus()\r\n    //   this._input.setSelectionRange(end, end)\r\n    // }\r\n\r\n    extract(value) {\r\n        const { nameKeyIncludes } = this.props;\r\n        const { attributes } = this.state;\r\n\r\n        return extractTokens(value, attributes, nameKeyIncludes);\r\n    }\r\n\r\n    getCurrentChunk(value) {\r\n        const { selectionStart } = this._input;\r\n\r\n        // get location of each token found in value\r\n        const tokens = this.extract(value);\r\n\r\n        // find index of the closest previous whitespace\r\n        const prevStr = value.substring(0, selectionStart);\r\n        const prevMatch = prevStr.match(/[^\\s]*$/);\r\n        const prevIdx = prevMatch ? prevStr.lastIndexOf(prevMatch[prevMatch.length - 1]) : -1;\r\n\r\n        // determine correct index for the start of the chunk\r\n        let index = prevIdx;\r\n        for (const [start, end] of tokens.reverse()) {\r\n            // token is between whitespace and cursor\r\n            if (selectionStart > end && prevIdx < start) {\r\n                index = end;\r\n                break;\r\n            }\r\n            // at the end of or inside a token (thats what she said)\r\n            if (selectionStart > start && selectionStart <= end) {\r\n                index = start;\r\n                break;\r\n            }\r\n            // there is whitespace in the token\r\n            if (prevIdx > start && prevIdx < end) {\r\n                index = end;\r\n                break;\r\n            }\r\n        }\r\n\r\n        // value is result of cursor back to beginning of chunk\r\n        const chunk = value.substring(index, selectionStart);\r\n        const indexEnd = index + chunk.length;\r\n\r\n        return {\r\n            index,\r\n            indexEnd,\r\n            chunk,\r\n        };\r\n    }\r\n\r\n    buildTokens(value, relativeToIdx = 0) {\r\n        const chunks = [];\r\n        const positions = this.extract(value);\r\n\r\n        let currentPosition = 0;\r\n        positions.reduce(\r\n            (prev, next) => {\r\n                // const startIdx = next[0] + relativeToIdx\r\n                // const endIdx = next[1] + relativeToIdx\r\n\r\n                chunks.push(value.substring(prev[1], next[0]));\r\n                chunks.push(\r\n                    <Token key={`token-${next[0]}`} tokenColor={this.props.inputProps.tokenColor}>\r\n                        {value.substring(next[0], next[1])}\r\n                    </Token>\r\n                );\r\n\r\n                currentPosition = next[1];\r\n                return next;\r\n            },\r\n            [null, 0]\r\n        );\r\n\r\n        chunks.push(value.substring(currentPosition));\r\n        return chunks.filter(Boolean);\r\n    }\r\n\r\n    buildOverlay(value) {\r\n        // figure out where we should split the overlay,\r\n        // so we know where to position the dropdown\r\n        const { index } = this.getCurrentChunk(value);\r\n\r\n        // everything to the left of the current word/token\r\n        const stuffOnLeft = this.buildTokens(value.substring(0, index));\r\n\r\n        // everything to the right of the current word/token\r\n        // need to have default whitespace or dropdown will not find position of caret\r\n        const stuffOnRight = this.buildTokens(value.substring(index) || \" \", index);\r\n\r\n        // since it will never split up a token,\r\n        // we can build each side of cursor independently\r\n        return [\r\n            stuffOnLeft,\r\n            <Inline key={`after-${index}`} style={{ outline: this.props.debug ? \"1px solid red\" : \"none\" }} ref={(ref) => (this._marker = ref)}>\r\n                {stuffOnRight}\r\n            </Inline>,\r\n        ];\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            nameKey,\r\n            className,\r\n            inputProps,\r\n            placeholder,\r\n            keyboardHelpers,\r\n            collapseOnBlur,\r\n            footerComponent,\r\n            dropdownProps,\r\n            selectorProps,\r\n            listProps,\r\n            alwaysLeft,\r\n            translations,\r\n        } = this.props;\r\n\r\n        const { value, attributes, dropdownOpen, dropdownValue, dropdownX, dropdownY, overlayComponents } = this.state;\r\n\r\n        const collapsed = !this.state.focused && collapseOnBlur;\r\n\r\n        return (\r\n            <OutsideAlerter notify={this.onClose}>\r\n                <Container className={className}>\r\n                    <InputContainer {...inputProps} onClick={() => this._input.focus()}>\r\n                        <Overlay collapsed={collapsed}>{overlayComponents}</Overlay>\r\n\r\n                        <Input\r\n                            autoComplete=\"off\"\r\n                            autoCorrect=\"off\"\r\n                            autoCapitalize=\"off\"\r\n                            spellCheck=\"false\"\r\n                            autoFocus={inputProps.autoFocus}\r\n                            maxRows={collapsed ? 1 : undefined}\r\n                            placeholder={placeholder}\r\n                            placeholderColor={inputProps.placeholderColor}\r\n                            value={value}\r\n                            onFocus={this.onFocus}\r\n                            onBlur={this.onBlur}\r\n                            onKeyDown={this.onKeyDown}\r\n                            onChange={this.onChange}\r\n                            ref={(ref) => (this._input = ref)}\r\n                        />\r\n                    </InputContainer>\r\n\r\n                    {dropdownOpen && (\r\n                        <Dropdown\r\n                            keyboardHelpers={keyboardHelpers}\r\n                            footerComponent={footerComponent}\r\n                            attributes={attributes}\r\n                            value={dropdownValue}\r\n                            nameKey={nameKey}\r\n                            onSelect={this.onSelectValue}\r\n                            onClose={this.onClose}\r\n                            offsetX={alwaysLeft ? 0 : dropdownX}\r\n                            offsetY={dropdownY}\r\n                            dropdownProps={dropdownProps}\r\n                            selectorProps={selectorProps}\r\n                            listProps={listProps}\r\n                            translations={translations}\r\n                        />\r\n                    )}\r\n                </Container>\r\n            </OutsideAlerter>\r\n        );\r\n    }\r\n}\r\n"],"names":["compareFuzzy","partialValue","fullValue","RegExp","escape","test","tokenRegex","opts","qtfr","partial","parseToken","value","attributes","nameKeyIncludes","results","Array","isArray","exec","length","tokenData","fullToken","attributeName","attributeNameValid","attributeValue","attributeValueValid","prepended","operator","negated","indexOf","quoted","Boolean","wildcard","attribute","find","attr","_step","matchFound","_iterator","_createForOfIteratorHelperLoose","done","enumerations","findIndex","v","swingDown","keyframes","_templateObject","_taggedTemplateLiteralLoose","Container","styled","_templateObject2","top","left","color","boxShadow","borders","borderColor","borderRadius","space","width","minWidth","fontSize","fontWeight","fontFamily","lineHeight","letterSpacing","defaultProps","bg","Section","_templateObject3","props","center","Suggestions","_templateObject4","maxHeight","Suggestion","_templateObject5","maxWidth","active","p","Operators","_templateObject6","Operator","_templateObject7","OperatorLone","_templateObject8","Key","_templateObject9","KeyOutline","_templateObject10","theme","long","Helper","_templateObject11","Dropdown","_PureComponent","_this","call","this","onKeyDown","bind","_assertThisInitialized","handleEnterKey","handleEscKey","handleArrowKeys","adjustListScroll","getAttribute","getSuggestions","getSuggestionAddons","filterSuggestions","acceptSuggestion","getOperators","setOperator","state","suggestions","highlightedIdx","selectedIdx","_inheritsLoose","_proto","prototype","componentDidMount","keyboardHelpers","document","addEventListener","componentWillUnmount","removeEventListener","componentWillReceiveProps","nextProps","componentDidUpdate","onClose","evt","keyCode","preventDefault","isDownKey","max","newIdx","setState","_this$_selected","_selected","offsetTop","selectorHeight","clientHeight","_this$_list","_list","topWaypoint","bottomWaypoint","position","scrollTop","_this$props","nameKey","map","parsed","addons","type","push","_this$props2","searchValue","filtered","filter","concat","_this$props3","onSelect","_this$state","suggestion","operators","name","char","newOperator","_this$state2","newValue","replace","token","_ref","_ref$prepended","_ref$attributeName","_ref$attributeValue","_ref$operator","serializeToken","render","_this2","Footer","footerComponent","_jsxs","_extends","offsetX","offsetY","dropdownProps","children","_jsx","listProps","ref","key","isActive","onClick","onMouseOver","undefined","selectorProps","translations","negate","navigate","select","PureComponent","propTypes","PropTypes","string","array","func","number","bool","object","OutsideAlerter","_Component","wrapperRef","React","createRef","handleClickOutside","event","current","contains","target","notify","Component","InputContainer","textAlign","border","CleanInput","Textarea","placeholderColor","style","prop","cssProperty","Input","Overlay","collapsed","css","Inline","tokenColor","Token","QueryAssist","onFocus","onBlur","onChange","onAutosuggest","onSelectValue","shouldAutosuggest","extract","getCurrentChunk","buildOverlay","focused","defaultValue","data","overlayComponents","dropdownClosed","dropdownOpen","dropdownValue","dropdownX","dropdownY","prevProps","prevState","newState","_this$_marker","_marker","offsetLeft","chunk","suggest","appended","_this$getCurrentChunk2","index","indexEnd","before","slice","after","_input","focus","setSelectionRange","isFocused","activeElement","shiftKey","onSubmit","selectionStart","nextCharIsEmpty","charAt","isNewWord","atEndOfWord","forWord","result","positions","regex","lastIndex","extractTokens","tokens","prevStr","substring","prevMatch","match","prevIdx","lastIndexOf","reverse","_step$value","start","end","buildTokens","relativeToIdx","_this3","chunks","currentPosition","reduce","prev","next","inputProps","_this4","stuffOnLeft","stuffOnRight","outline","debug","_this5","placeholder","alwaysLeft","_this$state3","collapseOnBlur","className","autoComplete","autoCorrect","autoCapitalize","spellCheck","autoFocus","maxRows"],"mappings":"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"}